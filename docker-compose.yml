# BPR-Math-Spine Docker Compose
#
# Provides easy development environment setup with:
# - BPR-Math-Spine container
# - Jupyter Lab interface  
# - Volume mounting for live development
#
# Usage:
#   docker-compose up -d
#   open http://localhost:8888
#
# Platform Configuration:
#   - Apple Silicon (M1/M2/M3): Uses linux/arm64 (default)
#   - Intel Macs/PCs: Change all "linux/arm64" to "linux/amd64"
#   - Auto-detect: Run 'uname -m' to check your architecture
#
# Author: Jack Al-Kahwati (jack@thestardrive.com)

version: '3.8'

services:
  bpr-math-spine:
    build: 
      context: .
      platform: linux/arm64  # Configured for Apple Silicon
    container_name: bpr-math-spine
    platform: linux/arm64  # Configured for Apple Silicon
    ports:
      - "8888:8888"  # Jupyter Lab
    volumes:
      - .:/workspace  # Mount current directory for live development
      - bpr-data:/workspace/data  # Persistent data volume
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=bpr-token-2025  # Set your own token
    restart: unless-stopped
    
    # Override default command for development
    command: >
      bash -c "
      conda run -n bpr jupyter lab 
      --ip=0.0.0.0 
      --port=8888 
      --no-browser 
      --allow-root 
      --notebook-dir=/workspace
      --ServerApp.token='bpr-token-2025'
      --ServerApp.password=''
      "

  # Optional: Add a service for running tests
  bpr-test:
    build: 
      context: .
      platform: linux/arm64  # Configured for Apple Silicon
    container_name: bpr-test
    platform: linux/arm64  # Configured for Apple Silicon
    volumes:
      - .:/workspace
    profiles:
      - testing
    command: >
      bash -c "
      conda run -n bpr python scripts/test_fenics_install.py &&
      conda run -n bpr python scripts/run_casimir_demo.py --no-fenics --quick --no-plots &&
      conda run -n bpr python scripts/thin_shell_benchmark.py &&
      conda run -n bpr pytest -v tests/ || echo 'Some tests may fail without full FEniCS - this is expected'
      "

  # Optional: Add a service for the thin-shell benchmark
  bpr-benchmark:
    build: 
      context: .
      platform: linux/arm64  # Configured for Apple Silicon
    container_name: bpr-benchmark
    platform: linux/arm64  # Configured for Apple Silicon
    volumes:
      - .:/workspace
      - bpr-data:/workspace/data
    profiles:
      - benchmark
    command: conda run -n bpr python scripts/thin_shell_benchmark.py

volumes:
  bpr-data:
    driver: local

networks:
  default:
    name: bpr-network